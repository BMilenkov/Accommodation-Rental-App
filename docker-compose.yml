version: '3'
services:
  db:
    image: postgres:latest
    container_name: accommodation-db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data
      - ../Backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../Backend/views.sql:/docker-entrypoint-initdb.d/views.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Backend
    image: ${DOCKERHUB_USER}/accommodation-backend:${BRANCH_NAME:-latest}
    container_name: accommodation-backend
    ports:
      - "${BACKEND_PORT:-9090}:9090"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BACKEND_PORT=9090
      - FRONTEND_PORT=3000
      - DB_PORT=5432
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE:-dev}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./Frontend
    image: ${DOCKERHUB_USER}/accommodation-frontend:${BRANCH_NAME:-latest}
    container_name: accommodation-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - VITE_BACKEND_PORT=9090
    depends_on:
      - backend

volumes:
  data:
